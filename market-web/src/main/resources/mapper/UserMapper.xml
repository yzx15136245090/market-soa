<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzti.market.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.zzti.market.entity.User">
        <id column="UserId" property="userid" jdbcType="VARCHAR"/>
        <result column="UserName" property="username" jdbcType="VARCHAR"/>
        <result column="UserSchool" property="userschool" jdbcType="VARCHAR"/>
        <result column="Password" property="password" jdbcType="VARCHAR"/>
        <result column="Telphone" property="telphone" jdbcType="VARCHAR"/>
        <result column="Email" property="email" jdbcType="VARCHAR"/>
        <result column="Credit" property="credit" jdbcType="VARCHAR"/>
        <result column="InviteCode" property="invitecode" jdbcType="VARCHAR"/>
        <result column="Power" property="power" jdbcType="VARCHAR"/>
        <result column="Photo" property="photo" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    UserId, UserName, UserSchool, Password, Telphone, Email, Credit, InviteCode, Power, 
    Photo
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where UserId = #{userid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where UserId = #{userid,jdbcType=VARCHAR}
  </delete>
    <update id="updateByPrimaryKey" parameterType="com.zzti.market.entity.User">
    update user
    set UserName = #{username,jdbcType=VARCHAR},
      UserSchool = #{userschool,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      Telphone = #{telphone,jdbcType=VARCHAR},
      Email = #{email,jdbcType=VARCHAR},
      Credit = #{credit,jdbcType=VARCHAR},
      InviteCode = #{invitecode,jdbcType=VARCHAR},
      Power = #{power,jdbcType=VARCHAR},
      Photo = #{photo,jdbcType=VARCHAR},
      
    where UserId = #{userid,jdbcType=VARCHAR}
  </update>
    <select id="queryUserInfo" resultMap="BaseResultMap" parameterType="java.lang.String">
  select UserId, UserName, password ,telphone,email,credit,invitecode,power,photo from user where UserName=#{username}
  </select>
    <select id="queryUserInfoemail" resultMap="BaseResultMap" parameterType="java.lang.String">
  select UserId, UserName, password ,telphone,email,credit,invitecode,power,photo from user where Email = #{email}
  </select>

    <select id="queryUserInfoid" resultMap="BaseResultMap" parameterType="java.lang.String">
  select UserId, UserName, password ,telphone,email,credit,invitecode,power,photo from user where UserId = #{UserId}
  </select>
    <update id="updateUser" parameterType="com.zzti.market.entity.User">
    update user set  UserName = #{username},
      UserSchool = #{userschool},
      Password = #{password},
      Telphone = #{telphone},
      Email = #{email},
      Credit = #{credit},
      InviteCode = #{invitecode},
      Power = #{power},
      Photo = #{photo},
       where UserId=#{userid}
  </update>

    <select id="findUserById" parameterType="String" resultMap="BaseResultMap">
   select UserId, UserName, password ,telphone,email,credit,invitecode,power,photo from user where UserId=#{userid}
  </select>

    <select id="getCountByUserId"  resultType="java.lang.Integer">
    select count(*) from user where UserId=#{userId}
  </select>
    <select id="loginCheck"  resultType="java.lang.Integer">
          SELECT  COUNT(*) FROM  user  WHERE  UserId =#{userId} and Password = #{passWord}
  </select>
    <insert id="addUserInfo" parameterType="com.zzti.market.entity.User">
        insert into user (UserId, UserName, UserSchool,
        Password, Telphone, Email,
        Credit, InviteCode, Power,
        Photo)
        values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userSchool,jdbcType=VARCHAR},
        #{passWord,jdbcType=VARCHAR}, #{telphone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{credit,jdbcType=VARCHAR}, #{inviteCode,jdbcType=VARCHAR}, #{power,jdbcType=VARCHAR},
        #{photo,jdbcType=VARCHAR})
    </insert>
    <insert id="addUser">
        INSERT  INTO user (userId,passWord) VALUES (#{userId,jdbcType=VARCHAR},#{passWord,jdbcType=VARCHAR})
    </insert>
</mapper>





